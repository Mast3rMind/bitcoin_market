<?php

namespace App\Presenters;

use Nette;
use Nette\Application\UI;
use Nette\Utils\Image;
use Captcha\Captcha\CaptchaControl;

class EntryPresenter extends UI\Presenter
{   
        protected function createComponentXX(){
            $form = new Nette\Application\UI\Form;
            
            $form->addCaptcha('captcha')
                 ->addRule(\Nette\Forms\Form::FILLED, "Rewrite text from image.")
                 ->addRule(CaptchaControl::CPTCHA, 'Try it again.')  
                 ->setFontSize(14)  
                 ->setLength(6) //word length  
                 ->setTextMargin(20) //px, set text margin on left and right side
                 ->setTextColor(\Nette\Utils\Image::rgb(0,0,0)) //array("red" => 0-255, "green" => 0-255, "blue" => 0-255)  
                 ->setBackgroundColor(\Nette\Utils\Image::rgb(240,240,240)) //array("red" => 0-255, "green" => 0-255, "blue" => 0-255)  
                 ->setImageHeight(28) //px, if not set (0), image height will be generated by font size  
                 ->setImageWidth(100) //px, if not set (0), image width will be generated by font size  
                 ->setExpire(100) //ms, set expiration time to session
                 ->setFilterSmooth(false) //int or false (disable)  
                 ->setFilterContrast(false)  //int or false (disable)  
                 ->useNumbers(true);
                  //  ->render(); // bool or void  
            
            $form->addSubmit('send', 'Odeslat');
            
            $form->onSuccess[] = array($this, 'captchaSucceeded');
                       
            return $form;
        }
        
        public function captchaSucceeded($form){
            $this->redirect('Sign:in');
        }
}
